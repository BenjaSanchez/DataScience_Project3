var_names
#Create act_names with descriptive activity names:
act_names = list()
for(i in act_num) {
act_names.append(act_codes[i,2])
}
act_names = list()
for(i in act_num) {
act_names <-rbind(act_names,act_codes[i,2])
}
View(act_names)
View(act_codes)
View(act_num)
View(act_codes)
View(act_num)
View(act_names)
act_names = list()
for(i in 1:length(act_num)) {
act_names <- c(act_names,act_codes[act_num[i],2])
}
for(i in 1:length(act_num)) {
act_names <- c(act_names,act_codes[act_num[i,1],2])
}
act_names = list()
for(i in 1:length(act_num)) {
act_names <- rbind(act_names,act_codes[act_num[i,1],2])
}
View(act_names)
act_codes[1,2]
act_codes[2,2]
act_codes[3,2]
act_codes[4,2]
act_names = data.frame()
for(i in 1:length(act_num)) {
act_names <- rbind(act_names,act_codes[act_num[i,1],2])
}
View(act_names)
act_names = character(length=0)
for(i in 1:length(act_num)) {
act_names <- rbind(act_names,act_codes[act_num[i,1],2])
}
View(act_names)
View(act_num)
View(act_num)
act_names = character(length=0)
for(i in act_num) {
act_names <- rbind(act_names,act_codes[as.numeric(act_num),2])
}
act_names = character(length=0)
for(i in act_num) {
act_names <- rbind(act_names,act_codes[as.numeric(i),2])
}
View(act_names)
View(act_codes)
i=1
act_codes[as.numeric(i),2]
act_names = character(length=0)
for(i in act_num) {
act_names <- rbind(act_names,act_codes[as.numeric(i),2])
}
View(act_names)
View(act_names)
View(act_num)
View(act_names)
View(act_names)
act_names = character(length=length(act_num))
for(i in 1:length(act_num)) {
act_names[i] <- act_codes[as.numeric(i),2]
}
act_names
act_names = character(length=length(act_num))
act_names
act_names = list(length=length(act_num))
act_names
length(act_num)
View(act_num)
act_names = list(length=length(act_num[,1]))
length(act_num[,1])
act_names
for(i in 1:length(act_num)) {
act_names[i] <- act_codes[as.numeric(i),2]
}
act_names
#Create act_names with descriptive activity names:
act_names = list(length=length(act_num[,1]))
for(i in 1:length(act_num[,1])) {
act_names[i] <- act_codes[as.numeric[,i],2]
}
act_names = list(length=length(act_num[,1]))
for(i in 1:length(act_num[,1])) {
act_names[i] <- act_codes[as.numeric(i),2]
}
head(act_names)
View(act_num)
act_names = list(length=length(act_num[,1]))
for(i in 1:length(act_num[,1])) {
act_names[i] <- act_codes[act_num[i,1],2]
}
head(act_names)
i=1
act_codes[act_num[i,1],2]
act_names = list(length=length(act_num[,1]))
for(i in 1:length(act_num[,1])) {
act_names[i,1] <- act_codes[act_num[i,1],2]
}
#Create act_names with descriptive activity names:
act_names = vector('character',length=length(act_num[,1]))
for(i in 1:length(act_num[,1])) {
act_names[i,1] <- act_codes[act_num[i,1],2]
}
act_names = vector('character',length=0)
for(i in 1:length(act_num[,1])) {
act_names <- c(act_names,act_codes[act_num[i,1],2])
}
head(act_names)
act_codes[act_num[i,1],2]
act_names = ''
for(i in 1:length(act_num[,1])) {
act_names <- c(act_names,act_codes[act_num[i,1],2])
}
act_name
act_names
View(act_codes)
all_data <- cbind(factor(act_num),factor(sub_num),all_data)
all_data <- cbind(act_num,sub_num,all_data)
View(all_data)
summary(all_data)
act_codes
act_codes[,2]
View(act_num)
factor(act_num, labels = act_codes[,2])
factor(act_num[,1], labels = act_codes[,2])
act_names <- factor(act_num[,1], labels = act_codes[,2])
head(act_names)
View(sub_num)
View(act_codes)
#Load dplyr package:
library(dplyr)
#Read all relevant data:
train_data    <- read.table('UCI HAR Dataset/train/X_train.txt')
train_act_num <- read.table('UCI HAR Dataset/train/y_train.txt')
train_sub_num <- read.table('UCI HAR Dataset/train/subject_train.txt')
test_data     <- read.table('UCI HAR Dataset/test/X_test.txt')
test_act_num  <- read.table('UCI HAR Dataset/test/y_test.txt')
test_sub_num  <- read.table('UCI HAR Dataset/test/subject_test.txt')
act_codes     <- read.table('UCI HAR Dataset/activity_labels.txt')
var_names     <- read.table('UCI HAR Dataset/features.txt')
#Merge the training and test data sets to create one data set:
all_data <- rbind(train_data,test_data)
act_num  <- rbind(train_act_num,test_act_num)
sub_num  <- rbind(train_sub_num,test_sub_num)
#Extract only the mean and standard deviation measurements:
index     <- grep('mean()|std()',var_names[,2])
all_data  <- all_data[,index]
var_names <- var_names[index,2]
#Create act_names with descriptive activity names:
act_names <- factor(act_num[,1], labels = act_codes[,2])
act_names
all_data <- cbind(act_names,factor(sub_num[,1]),all_data)
View(all_data)
head(var_names)
var_names <- rbind('Activity','Subject',var_names)
View(var_names)
#Load dplyr package:
library(dplyr)
#Read all relevant data:
train_data    <- read.table('UCI HAR Dataset/train/X_train.txt')
train_act_num <- read.table('UCI HAR Dataset/train/y_train.txt')
train_sub_num <- read.table('UCI HAR Dataset/train/subject_train.txt')
test_data     <- read.table('UCI HAR Dataset/test/X_test.txt')
test_act_num  <- read.table('UCI HAR Dataset/test/y_test.txt')
test_sub_num  <- read.table('UCI HAR Dataset/test/subject_test.txt')
act_codes     <- read.table('UCI HAR Dataset/activity_labels.txt')
var_names     <- read.table('UCI HAR Dataset/features.txt')
#Merge the training and test data sets to create one data set:
all_data <- rbind(train_data,test_data)
act_num  <- rbind(train_act_num,test_act_num)
sub_num  <- rbind(train_sub_num,test_sub_num)
#Extract only the mean and standard deviation measurements:
index     <- grep('mean()|std()',var_names[,2])
all_data  <- all_data[,index]
var_names <- var_names[index,2]
#Create act_names with descriptive activity names:
act_names <- factor(act_num[,1], labels = act_codes[,2])
all_data <- cbind(act_names,factor(sub_num[,1]),all_data)
View(all_data)
prueba <- rbind('Activity','Subject',var_names[,1])
var_names
var_names <- c('Activity','Subject',var_names[,1])
prueba <- c('Activity','Subject',var_names)
prueba
as.character(var_name)
as.character(var_names)
#Load dplyr package:
library(dplyr)
#Read all relevant data:
train_data    <- read.table('UCI HAR Dataset/train/X_train.txt')
train_act_num <- read.table('UCI HAR Dataset/train/y_train.txt')
train_sub_num <- read.table('UCI HAR Dataset/train/subject_train.txt')
test_data     <- read.table('UCI HAR Dataset/test/X_test.txt')
test_act_num  <- read.table('UCI HAR Dataset/test/y_test.txt')
test_sub_num  <- read.table('UCI HAR Dataset/test/subject_test.txt')
act_codes     <- read.table('UCI HAR Dataset/activity_labels.txt')
var_names     <- read.table('UCI HAR Dataset/features.txt')
#Merge the training and test data sets to create one data set:
all_data <- rbind(train_data,test_data)
act_num  <- rbind(train_act_num,test_act_num)
sub_num  <- rbind(train_sub_num,test_sub_num)
#Extract only the mean and standard deviation measurements:
index     <- grep('mean()|std()',var_names[,2])
all_data  <- all_data[,index]
var_names <- as.character(var_names[index,2])
#Create act_names with descriptive activity names:
act_names <- factor(act_num[,1], labels = act_codes[,2])
#Add 2 additional columns to the dataset: Activity and Subject (as factors):
all_data <- cbind(act_names,factor(sub_num[,1]),all_data)
#Create descriptive variable names:
var_names <- c('Activity','Subject',var_names[,1])
var_names <- c('Activity','Subject',var_names)
var_names
var_names <- gsub('-mean()-','_mean_',var_names)
var_names <- gsub('-std()-','_std_',var_names)
var_names
colnames(alldata) <- var_names
colnames(all_data) <- var_names
View(all_data)
grep('as|bc',c('habias','because'))
#Load dplyr package:
library(dplyr)
#Read all relevant data:
train_data    <- read.table('UCI HAR Dataset/train/X_train.txt')
train_act_num <- read.table('UCI HAR Dataset/train/y_train.txt')
train_sub_num <- read.table('UCI HAR Dataset/train/subject_train.txt')
test_data     <- read.table('UCI HAR Dataset/test/X_test.txt')
test_act_num  <- read.table('UCI HAR Dataset/test/y_test.txt')
test_sub_num  <- read.table('UCI HAR Dataset/test/subject_test.txt')
act_codes     <- read.table('UCI HAR Dataset/activity_labels.txt')
var_names     <- read.table('UCI HAR Dataset/features.txt')
View(var_names)
index     <- grep('-mean()|-std()',var_names[,2])
index
index     <- grep('-mean()|-std()',var_names[,2],fixed=TRUE)
index
index     <- grep('-mean()',var_names[,2],fixed=TRUE)
index
#Extract only the mean and standard deviation measurements:
ind_mean  <- grep('-mean()',var_names[,2],fixed=TRUE)
ind_std   <- grep('-std()',var_names[,2],fixed=TRUE)
all_data  <- all_data[,sort(c(ind_mean,ind_std))]
var_names <- as.character(var_names[index,2])
#Merge the training and test data sets to create one data set:
all_data <- rbind(train_data,test_data)
act_num  <- rbind(train_act_num,test_act_num)
sub_num  <- rbind(train_sub_num,test_sub_num)
#Extract only the mean and standard deviation measurements:
ind_mean  <- grep('-mean()',var_names[,2],fixed=TRUE)
ind_std   <- grep('-std()',var_names[,2],fixed=TRUE)
all_data  <- all_data[,sort(c(ind_mean,ind_std))]
var_names <- as.character(var_names[index,2])
index
var_names
#Load dplyr package:
library(dplyr)
#Read all relevant data:
train_data    <- read.table('UCI HAR Dataset/train/X_train.txt')
train_act_num <- read.table('UCI HAR Dataset/train/y_train.txt')
train_sub_num <- read.table('UCI HAR Dataset/train/subject_train.txt')
test_data     <- read.table('UCI HAR Dataset/test/X_test.txt')
test_act_num  <- read.table('UCI HAR Dataset/test/y_test.txt')
test_sub_num  <- read.table('UCI HAR Dataset/test/subject_test.txt')
act_codes     <- read.table('UCI HAR Dataset/activity_labels.txt')
var_names     <- read.table('UCI HAR Dataset/features.txt')
#Merge the training and test data sets to create one data set:
all_data <- rbind(train_data,test_data)
act_num  <- rbind(train_act_num,test_act_num)
sub_num  <- rbind(train_sub_num,test_sub_num)
#Extract only the mean and standard deviation measurements:
ind_mean  <- grep('-mean()',var_names[,2],fixed=TRUE)
ind_std   <- grep('-std()',var_names[,2],fixed=TRUE)
all_data  <- all_data[,sort(c(ind_mean,ind_std))]
var_names <- as.character(var_names[index,2])
var_names <- as.character(var_names[sort(c(ind_mean,ind_std)),2])
var_names
#Create act_names with descriptive activity names:
act_names <- factor(act_num[,1], labels = act_codes[,2])
#Add 2 additional columns to the dataset: Activity and Subject (as factors):
all_data <- cbind(act_names,factor(sub_num[,1]),all_data)
View(all_data)
var_names
#Create descriptive variable names:
var_names <- c('Activity','Subject',var_names)
var_names <- gsub('()','',var_names)
var_names <- gsub('-','_',var_names)
var_names
var_names <- gsub('()','',var_names,fixed=TRUE)
var_names
#Assign names to all variables from the dataset:
colnames(all_data) <- var_names
View(all_data)
all_data <- arrange(all_data,Activity,Subject)
summary(all_data)
all_data <- arrange(all_data,Activity)
View(all_data)
summary(all_data)
source('~/Dropbox/PhD/Cursos/Coursera/3. Getting & Cleaning Data/Project/run_analysis.R')
View(train_act_num)
################################################################################
## run_analysis.R
##
##
## Benjamín J. Sánchez. Last Update: 2015-04-24
################################################################################
#Load dplyr package:
library(dplyr)
#Read all relevant data:
train_data    <- read.table('UCI HAR Dataset/train/X_train.txt')
train_act_num <- read.table('UCI HAR Dataset/train/y_train.txt')
train_sub_num <- read.table('UCI HAR Dataset/train/subject_train.txt')
test_data     <- read.table('UCI HAR Dataset/test/X_test.txt')
test_act_num  <- read.table('UCI HAR Dataset/test/y_test.txt')
test_sub_num  <- read.table('UCI HAR Dataset/test/subject_test.txt')
act_codes     <- read.table('UCI HAR Dataset/activity_labels.txt')
var_names     <- read.table('UCI HAR Dataset/features.txt')
#Merge the training and test data sets to create one data set:
all_data <- rbind(train_data,test_data)
act_num  <- rbind(train_act_num,test_act_num)
sub_num  <- rbind(train_sub_num,test_sub_num)
#Extract only the mean and standard deviation measurements:
ind_mean  <- grep('-mean()',var_names[,2],fixed=TRUE)
ind_std   <- grep('-std()',var_names[,2],fixed=TRUE)
index     <- sort(c(ind_mean,ind_std))
all_data  <- all_data[,index]
var_names <- as.character(var_names[index,2])
#Create vector with descriptive activity names:
act_names <- factor(act_num[,1], labels = act_codes[,2])
#Add 2 additional columns to the dataset: Activity and Subject (as factors):
all_data <- cbind(act_names,factor(sub_num[,1]),all_data)
#Create descriptive variable names:
var_names <- c('Activity','Subject',var_names)
var_names <- gsub('()','',var_names,fixed=TRUE)
var_names <- gsub('-','_',var_names,fixed=TRUE)
#Assign names to all variables from the dataset:
colnames(all_data) <- var_names
#Sort by activity:
all_data <- arrange(all_data,Activity)
#Create a tidy data set with the average of each variable for each activity
#and each subject: use dcast() or tapply() (reshaping data)
View(all_data)
View(all_data)
tiny_data <-group_by(all_data,Activity,Subject)
View(tiny_data)
tiny_data <-group_by(all_data,Activity)
View(tiny_data)
tiny_data <-tapply(all_data,all_data$Activity,mean)
tiny_data <-group_by(all_data,Activity,Subject)
group_data <-group_by(all_data,Activity,Subject)
tiny_data  <- summarize(group_data)
View(tiny_data)
group_data <-group_by(all_data,Activity,Subject)
tiny_data  <- summarize(group_data,mean)
group_data <-group_by(all_data,Activity,Subject)
tiny_data  <- summarize(group_data,mean(group_data))
View(tiny_data)
all_data %>% group_by(Activity,Subject) %>% summarise_each(funs(mean))
group_data <- group_by(all_data,Activity,Subject)
tidy_data  <- summarise_each(funs(mean))
group_data <- group_by(all_data,Activity,Subject)
tidy_data  <- summarise_each(all_data,mean)
group_data <- group_by(all_data,Activity,Subject)
tidy_data  <- summarise_each(group_data,funs(mean)
)
View(tidy_data)
################################################################################
## run_analysis.R
##
##
## Benjamín J. Sánchez. Last Update: 2015-04-24
################################################################################
#Load dplyr package:
library(dplyr)
#Read all relevant data:
train_data    <- read.table('UCI HAR Dataset/train/X_train.txt')
train_act_num <- read.table('UCI HAR Dataset/train/y_train.txt')
train_sub_num <- read.table('UCI HAR Dataset/train/subject_train.txt')
test_data     <- read.table('UCI HAR Dataset/test/X_test.txt')
test_act_num  <- read.table('UCI HAR Dataset/test/y_test.txt')
test_sub_num  <- read.table('UCI HAR Dataset/test/subject_test.txt')
act_codes     <- read.table('UCI HAR Dataset/activity_labels.txt')
var_names     <- read.table('UCI HAR Dataset/features.txt')
#Merge the training and test data sets to create one data set:
all_data <- rbind(train_data,test_data)
act_num  <- rbind(train_act_num,test_act_num)
sub_num  <- rbind(train_sub_num,test_sub_num)
#Extract only the mean and standard deviation measurements:
ind_mean  <- grep('-mean()',var_names[,2],fixed=TRUE)
ind_std   <- grep('-std()',var_names[,2],fixed=TRUE)
index     <- sort(c(ind_mean,ind_std))
all_data  <- all_data[,index]
var_names <- as.character(var_names[index,2])
#Create vector with descriptive activity names:
act_names <- factor(act_num[,1], labels = act_codes[,2])
#Add 2 additional columns to the dataset: Activity and Subject (as factors):
all_data <- cbind(act_names,factor(sub_num[,1]),all_data)
#Create descriptive variable names:
var_names <- c('Activity','Subject',var_names)
var_names <- gsub('()','',var_names,fixed=TRUE)
var_names <- gsub('-','_',var_names,fixed=TRUE)
#Assign names to all variables from the dataset:
colnames(all_data) <- var_names
#Sort by activity:
all_data <- arrange(all_data,Activity)
#Create a tidy data set with the average of each variable for each activity
#and each subject:
group_data <- group_by(all_data,Activity,Subject)
tidy_data  <- summarise_each(group_data,funs(mean))
################################################################################
View(tidy_data)
tidy_data  <- summarise_each(group_data,mean)
?save
?write.csv
################################################################################
## run_analysis.R
##
##
## Benjamín J. Sánchez. Last Update: 2015-04-24
################################################################################
#Load dplyr package:
library(dplyr)
#Read all relevant data:
train_data    <- read.table('UCI HAR Dataset/train/X_train.txt')
train_act_num <- read.table('UCI HAR Dataset/train/y_train.txt')
train_sub_num <- read.table('UCI HAR Dataset/train/subject_train.txt')
test_data     <- read.table('UCI HAR Dataset/test/X_test.txt')
test_act_num  <- read.table('UCI HAR Dataset/test/y_test.txt')
test_sub_num  <- read.table('UCI HAR Dataset/test/subject_test.txt')
act_codes     <- read.table('UCI HAR Dataset/activity_labels.txt')
var_names     <- read.table('UCI HAR Dataset/features.txt')
#Merge the training and test data sets to create one data set:
all_data <- rbind(train_data,test_data)
act_num  <- rbind(train_act_num,test_act_num)
sub_num  <- rbind(train_sub_num,test_sub_num)
#Extract only the mean and standard deviation measurements:
ind_mean  <- grep('-mean()',var_names[,2],fixed=TRUE)
ind_std   <- grep('-std()',var_names[,2],fixed=TRUE)
index     <- sort(c(ind_mean,ind_std))
all_data  <- all_data[,index]
var_names <- as.character(var_names[index,2])
#Create vector with descriptive activity names:
act_names <- factor(act_num[,1], labels = act_codes[,2])
#Add 2 additional columns to the dataset: Activity and Subject (as factors):
all_data <- cbind(act_names,factor(sub_num[,1]),all_data)
#Create descriptive variable names:
var_names <- c('Activity','Subject',var_names)
var_names <- gsub('()','',var_names,fixed=TRUE)
var_names <- gsub('-','_',var_names,fixed=TRUE)
#Assign names to all variables from the dataset:
colnames(all_data) <- var_names
#Sort by activity:
all_data <- arrange(all_data,Activity)
#Create a tidy data set with the average of each variable for each activity
#and each subject:
group_data <- group_by(all_data,Activity,Subject)
tidy_data  <- summarise_each(group_data,funs(mean))
#Save results:
write.table(tidy_data,'tidy_data.txt',row.name=FALSE)
################################################################################
################################################################################
## run_analysis.R
##
##
## Benjamín J. Sánchez. Last Update: 2015-04-24
################################################################################
#Load dplyr package:
library(dplyr)
#Read all relevant data:
train_data    <- read.table('UCI HAR Dataset/train/X_train.txt')
train_act_num <- read.table('UCI HAR Dataset/train/y_train.txt')
train_sub_num <- read.table('UCI HAR Dataset/train/subject_train.txt')
test_data     <- read.table('UCI HAR Dataset/test/X_test.txt')
test_act_num  <- read.table('UCI HAR Dataset/test/y_test.txt')
test_sub_num  <- read.table('UCI HAR Dataset/test/subject_test.txt')
act_codes     <- read.table('UCI HAR Dataset/activity_labels.txt')
var_names     <- read.table('UCI HAR Dataset/features.txt')
#Merge the training and test data sets to create one data set:
all_data <- rbind(train_data,test_data)
act_num  <- rbind(train_act_num,test_act_num)
sub_num  <- rbind(train_sub_num,test_sub_num)
#Extract only the mean and standard deviation measurements:
ind_mean  <- grep('-mean()',var_names[,2],fixed=TRUE)
ind_std   <- grep('-std()',var_names[,2],fixed=TRUE)
index     <- sort(c(ind_mean,ind_std))
all_data  <- all_data[,index]
var_names <- as.character(var_names[index,2])
#Create vector with descriptive activity names:
act_names <- factor(act_num[,1], labels = act_codes[,2])
#Add 2 additional columns to the dataset: Activity and Subject (as factors):
all_data <- cbind(act_names,factor(sub_num[,1]),all_data)
#Create descriptive variable names:
var_names <- c('Activity','Subject',var_names)
var_names <- gsub('()','',var_names,fixed=TRUE)
var_names <- gsub('-','_',var_names,fixed=TRUE)
#Assign names to all variables from the dataset:
colnames(all_data) <- var_names
#Sort by activity:
all_data <- arrange(all_data,Activity)
#Create a tidy data set with the average of each variable for each activity
#and each subject:
group_data <- group_by(all_data,Activity,Subject)
tidy_data  <- summarise_each(group_data,funs(mean))
#Save results:
write.table(tidy_data,'tidy_data.txt',sep = '\t', row.name = FALSE)
################################################################################
